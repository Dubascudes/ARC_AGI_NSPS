from GridTools import Grid, GridUtils, GridTransformation, Entity

# Convert input data to Grid object
input_grid = Grid.from_list(input_grid_data)

# Create a working grid
working_grid = input_grid

# Get all entities grouped by color
all_entities_separated = GridUtils.get_all_entities_by_color(working_grid)

# Identify the 2x2 green square (color ID = 3)
green_entities = all_entities_separated[3]  # Color 3 is green
green_entity = None
for entity in green_entities:
    if entity.get_dim() == (1, 1):  # Check if the entity is a 2x2 square
        green_entity = entity
        break

if not green_entity:
    raise ValueError("No 2x2 green square found!")

# Iterate through all other colors and draw lines
for color in range(1, 9):  # Assuming colors are in the range 1-8
    if color == 3:  # Skip green
        continue

    color_entities = all_entities_separated[color]
    
    for color_entity in color_entities:
        # Check if the entity can be connected to the green entity
        green_bounds = green_entity.get_bounds()
        color_bounds = color_entity.get_bounds()

        if GridUtils.is_aligned(green_entity, color_entity):
          working_grid.connect_with_line(color_entity.get_color(), color_entity, green_entity)

# Define output_grid (required by the server)
green_entity.set_color(3)
working_grid.draw_entity(green_entity)
print(green_entity)
output_grid = working_grid
